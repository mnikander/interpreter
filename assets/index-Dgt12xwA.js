(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const u of r)if(u.type==="childList")for(const o of u.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(r){const u={};return r.integrity&&(u.integrity=r.integrity),r.referrerPolicy&&(u.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?u.credentials="include":r.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function i(r){if(r.ep)return;r.ep=!0;const u=n(r);fetch(r.href,u)}})();function d(e){let t=0,n=!0;for(let r=0;r<e.length;r++)e[r]=="("?t++:e[r]==")"&&t--,t<0&&(n=!1);let i=t==0;return n&&i}function p(e){let t="";for(let n=0;n<e.length;n++)e[n]=="("?t+=" ( ":e[n]==")"?t+=" ) ":t+=e[n];return t}function _(e){return e.kind=="TK_ERROR"}function R(e){return e.kind=="TK_NUMBER"}function m(e){return e.kind=="TK_LEFT"}function v(e){return e.kind=="TK_RIGHT"}function k(e){return e.kind=="TK_ADD"}function E(e){if(!d(e))return[{kind:"TK_ERROR",value:"invalid parentheses"}];let n=p(e).split(" ");return n=g(n),n.map(h)}function g(e){let t=[];for(let n of e)n!=""&&t.push(n);return t}function h(e){return O(e)??N(e)??{kind:"TK_ERROR",value:`invalid character ${e}`}}function O(e){if(e=="(")return{kind:"TK_LEFT"};if(e==")")return{kind:"TK_RIGHT"};if(e=="+")return{kind:"TK_ADD"}}function N(e){let t=Number(e);if(!isNaN(t))return{kind:"TK_NUMBER",value:t}}function s(e){return e.kind=="ND_ATOM"}function y(e){return e.kind=="ND_CALL"}function D(e){return e.kind=="ND_IDENTIFIER"}function T(e){let[t,n]=l(e,0);return n==e.length?[t,n]:n<e.length?[{kind:"ND_ERROR",value:"expected a single expression"},n]:[{kind:"ND_ERROR",value:"not all tokens could be evaluated"},n]}function l(e,t=0){if(t<e.length){let n=e[t];if(R(n))return t++,[{kind:"ND_ATOM",value:n.value},t];if(k(n))return t++,[{kind:"ND_IDENTIFIER",value:"+"},t];if(m(n)){t++;let i={kind:"ND_EMPTY"},r=[];for([i,t]=l(e,t);t<e.length;){if(v(e[t]))return t++,[{kind:"ND_CALL",func:i,params:r},t];{let u={kind:"ND_EMPTY"};[u,t]=l(e,t),r.push(u)}}return[{kind:"ND_ERROR",value:"expected closing parentheses"},t]}else return t++,[{kind:"ND_ERROR",value:`unable to parse token of kind ${e[t].kind}`},t]}else return[{kind:"ND_ERROR",value:"expected another token"},t]}function c(e){if(e.kind=="ND_ERROR")return e;if(e.kind=="ND_CALL"){const t=e;if(c(t.func)!==void 0)return e;for(let n of t.params)if(c(n)!==void 0)return n;return}else return}function b(e){const t=E(e),n=t.find(_);if(n!==void 0)return"ERROR: "+(n.value??"unknown");const[i,r]=T(t),u=c(i);if(u!==void 0)return"ERROR: "+(u.value??"unknown");if(s(i))return i.value;if(y(i)){const o=i;if(D(o.func))if(o.func.value==="+")if(o.params.length==2)if(s(o.params[0])&&s(o.params[1])){const f=o.params[0],a=o.params[1];return typeof f.value=="number"&&typeof a.value=="number"?f.value+a.value:"ERROR: invalid arguments, expected numbers"}else return"ERROR: invalid arguments, expected atoms";else return"ERROR: invalid number of arguments, expected 2";else return"ERROR: unknown function";else return"ERROR: expected function identifier"}else return"ERROR: invalid expression"}function L(){const e=document.getElementById("input"),t=document.getElementById("output"),n=e.value,i=b(n);t.textContent+=`> ${n}
${i}
`}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("output");e&&(e.textContent=`Welcome! Try typing:

(+ 1 2)

and press Enter. For more info run:

(help)

`);const t=document.getElementById("input");t==null||t.addEventListener("keydown",n=>{n.key==="Enter"&&(n.preventDefault(),L())})});
