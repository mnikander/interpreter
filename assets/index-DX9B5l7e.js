(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const u of i.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function r(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(t){if(t.ep)return;t.ep=!0;const i=r(t);fetch(t.href,i)}})();const d={whitespace:function(e,n,r){return{kind:"Token",subkind:"Whitespace",id:e,offset:n,value:r}},open:function(e,n,r){return{kind:"Token",subkind:"Open      ",id:e,offset:n,value:"("}},close:function(e,n,r){return{kind:"Token",subkind:"Close     ",id:e,offset:n,value:")"}},boolean:function(e,n,r){return r==="false"||r==="False"?{kind:"Token",subkind:"Boolean   ",id:e,offset:n,value:!1}:{kind:"Token",subkind:"Boolean   ",id:e,offset:n,value:!0}},number:function(e,n,r){return{kind:"Token",subkind:"Number    ",id:e,offset:n,value:Number(r)}},string:function(e,n,r){return{kind:"Token",subkind:"String    ",id:e,offset:n,value:r}},identifier:function(e,n,r){return{kind:"Token",subkind:"Identifier",id:e,offset:n,value:r}}},k={whitespace:function(e){return e.kind==="Token"&&e.subkind==="Whitespace"},open:function(e){return e.kind==="Token"&&e.subkind==="Open      "},close:function(e){return e.kind==="Token"&&e.subkind==="Close     "},boolean:function(e){return e.kind==="Token"&&e.subkind==="Boolean   "},number:function(e){return e.kind==="Token"&&e.subkind==="Number    "},string:function(e){return e.kind==="Token"&&e.subkind==="String    "},identifier:function(e){return e.kind==="Token"&&e.subkind==="Identifier"}};function c(e,n,r){return{kind:"Error",subkind:e,token_id:r,message:n}}function m(e,n){return`${e.subkind} error: ${e.message} at token number ${e.token_id} '${n[e.token_id].value}'`}function l(e){return e.ok===!0}function a(e){return e.ok===!1}function T(e){return{ok:!0,value:e}}function E(e,n,r){return{ok:!1,error:c(e,n,r)}}const s={whitespace:{description:"one or more whitespace characters",regex:/^\s+/},open:{description:"(",regex:/\(/},close:{description:")",regex:/\)/},bool:{description:"a boolean",regex:/^(true|false)/},int:{description:"an integer",regex:/^[-+]?[0-9]+/},float:{description:"a float",regex:/^[-+]?((\d+\.\d*)|(\d*\.\d+))/},string:{description:"a string",regex:/^"(\\.|[^"\\])*"|'(\\.|[^'\\])*'/},id_alphanum:{description:"an alphanumeric identifier",regex:/^[_a-zA-Z][_a-zA-Z0-9]*/},id_special:{description:"an operation identifier",regex:/^[.,:;!?<>\=\@\#\$\+\-\*\/\%\&\|\^\~]+/}};function $(e){let n={ok:!0,value:{kind:"State",index:0,line:e,tokens:[]}};for(;l(n);)if(n.value.line.length>0)n=N(n.value);else return T(n.value.tokens);return n}function N(e){let n={ok:!0,value:e};return n=f(s.whitespace,d.whitespace,e),l(n)||(n=f(s.open,d.open,e),l(n))||(n=f(s.close,d.close,e),l(n))||(n=f(s.bool,d.boolean,e),l(n))||(n=f(s.float,d.number,e),l(n))||(n=f(s.int,d.number,e),l(n))||(n=f(s.string,d.string,e),l(n))||(n=f(s.id_alphanum,d.identifier,e),l(n))||(n=f(s.id_special,d.identifier,e),l(n))?n:E("Lexing","invalid token, expected an atom",e.tokens.length)}function f(e,n,r){const o=e.regex.exec(r.line);if(o&&o.index===0){const t=o[0];return r.index+=t.length,r.line=r.line.slice(t.length),n!==void 0&&r.tokens.push(n(r.tokens.length,r.index,t)),T(r)}else return E("Lexing",`invalid token, expected ${e.description}`,r.tokens.length)}function h(e){return e.kind==="Call      "}function S(e){return h(e)&&e.data.length===4&&_(e.data[0])&&e.data[0].value==="let"&&_(e.data[1])}function L(e){return e.kind==="Boolean   "}function B(e){return e.kind==="Number    "}function C(e){return e.kind==="String    "}function _(e){return e.kind==="Identifier"}function A(e,n,r){return{kind:"Call      ",token:n.id,id:e,data:r}}function M(e,n){return{kind:n.subkind,token:n.id,id:e,value:n.value}}function H(e){return W({token_index:0,node_counter:0,tokens:e}).result}function W(e){let n=x(e);return e=n.state,e=p(e),e.token_index!==e.tokens.length?{state:e,result:{ok:!1,error:c("Parsing","expected a single expression at",e.token_index)}}:{state:e,result:n.result}}function x(e){e=p(e);const n=z(e);if(l(n.result))return n;const r=D(e);return l(r.result)?r:{state:e,result:{ok:!1,error:c("Parsing","an expression at",e.token_index)}}}function z(e){const n=e.tokens[e.token_index];if(e.token_index<e.tokens.length&&(k.boolean(n)||k.number(n)||k.string(n)||k.identifier(n))){let r=M(e.node_counter,n);return e=I(e),{state:e,result:{ok:!0,value:r}}}return{state:e,result:{ok:!1,error:c("Parsing","an atom, expected a boolean, number, string, or identifier",e.token_index)}}}function D(e){if(e.token_index==e.tokens.length||!k.open(e.tokens[e.token_index]))return{state:e,result:{ok:!1,error:c("Parsing","a function call, expected '('",e.token_index)}};{let n=A(e.node_counter,e.tokens[e.token_index],[]);e=I(e),e=p(e);const r=x(e);if(a(r.result))return r;for(e=r.state,n.data.push(r.result.value);e.token_index<e.tokens.length&&k.whitespace(e.tokens[e.token_index]);){e=p(e);const o=x(e);if(a(o.result))break;e=o.state,n.data.push(o.result.value)}return e=p(e),e.token_index==e.tokens.length||!k.close(e.tokens[e.token_index])?{state:e,result:{ok:!1,error:c("Parsing","a function call, expected ')'",e.token_index)}}:(e.token_index++,{state:e,result:{ok:!0,value:n}})}}function p(e){let n=e.token_index;return n<e.tokens.length&&k.whitespace(e.tokens[n])&&n++,{token_index:n,node_counter:e.node_counter,tokens:e.tokens}}function I(e){return{token_index:e.token_index+1,node_counter:e.node_counter+1,tokens:e.tokens}}function v(e,n){if(L(e)||B(e)||C(e))return{ok:!0,value:e.value};if(_(e)){const r=O(e.value,n);return r!==void 0?{ok:!0,value:r}:{ok:!1,error:c("Evaluation","identifier",e.token)}}else if(S(e)){const r=e.data[1],o=v(e.data[2],n);if(!o.ok)return o;const t=e.data[3];let i={parent:n,symbols:new Map};return i.symbols.set(r.value,o.value),v(t,i)}else if(h(e)){let r=e.data.map(u=>v(u,n));for(let u of r)if(a(u))return u;const o=r.map(u=>u.value),t=o[0],i=o.slice(1);return{ok:!0,value:t(i)}}else return{ok:!1,error:c("Evaluation","unknown AST node",e.token)}}const w={parent:void 0,symbols:new Map([["+",function(e){return e[0]+e[1]}],["-",function(e){return e[0]-e[1]}],["*",function(e){return e[0]*e[1]}],["/",function(e){return e[0]/e[1]}],["%",function(e){return e[0]%e[1]}],["<",function(e){return e[0]<e[1]}],[">",function(e){return e[0]>e[1]}],["<=",function(e){return e[0]<=e[1]}],[">=",function(e){return e[0]>=e[1]}],["==",function(e){return e[0]==e[1]}],["!=",function(e){return e[0]!=e[1]}],["&",function(e){return e[0]&&e[1]}],["|",function(e){return e[0]||e[1]}],["!",function(e){return!e[0]}],["if",function(e){return e[0]?e[1]:e[2]}]])};function O(e,n){const r=n.symbols.get(String(e));return r!==void 0?r:n.parent!==void 0?O(e,n.parent):void 0}function b(e,n){if(L(e)||B(e)||C(e))return{ok:!0,value:void 0};if(_(e))return P(e.value,n)?{ok:!0,value:void 0}:{ok:!1,error:c("Semantic","unknown identifier",e.token)};if(S(e)){const r=e.data[1],o=e.data[2],t=e.data[3];if(!_(r))return{ok:!1,error:c("Semantic","not a valid identifier",r.token)};const u=b(o,n);if(!u.ok)return u;let g={parent:n,symbols:new Set};g.symbols.add(r.value);const y=b(t,g);return y.ok?{ok:!0,value:void 0}:y}else if(h(e)){for(let r of e.data){const o=b(r,n);if(!o.ok)return{ok:!1,error:o.error}}return{ok:!0,value:void 0}}else return{ok:!1,error:c("Semantic","unknown kind of AST entry",e.token)}}function P(e,n){return n.symbols.has(e)?!0:n.parent!==void 0?P(e,n.parent):!1}function Z(e){const n=$(e);if(a(n))return m(n.error,[]);const r=n.value,o=H(r);if(a(o))return m(o.error,r);const t=b(o.value,q(w));if(a(t))return m(t.error,r);const i=o.value,u=v(i,w);return a(u)?m(u.error,r):u.value}function q(e){return{parent:void 0,symbols:new Set(Array.from(e.symbols.keys()))}}function K(){const e=document.getElementById("input"),n=document.getElementById("output");n&&new MutationObserver(()=>{n.scrollTop=n.scrollHeight}).observe(n,{childList:!0});const r=e.value,o=Z(r);n.textContent+=`> ${r}
${o}
`}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("help-btn"),n=document.getElementById("help-box");e==null||e.addEventListener("click",()=>{n&&e&&(n.style.display==="block"?(n.style.display="none",e.textContent="Help"):(n.style.display="block",e.textContent="Close Help"))});const r=document.getElementById("output");r&&(r.textContent=`



















Welcome! Try typing:

(+ 1 2)

and press Enter. For more info, click on the help button in the top corner.

`);const o=document.getElementById("input");o==null||o.focus(),o==null||o.setSelectionRange(o.value.length,o.value.length),o==null||o.addEventListener("keydown",t=>{t.key==="Enter"&&(t.preventDefault(),K())})});
