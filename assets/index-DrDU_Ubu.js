(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function r(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=r(t);fetch(t.href,o)}})();function v(e,n){const r=n.symbols.get(String(e.value));return r!==void 0?r:n.parent!==void 0?v(e,n.parent):void 0}function y(e,n,r){return r.symbols.get(e.name.value)?{kind:"Evaluation error",token_id:e.token_id,message:"attempted to redefine an identifier which already exists"}:(r.symbols.set(e.name.value,n),{kind:"OK"})}function U(e){return{parent:e,symbols:new Map}}function b(e){let n=0,r=!0;for(let t=0;t<e.length;t++)e[t]=="("?n++:e[t]==")"&&n--,n<0&&(r=!1);let i=n==0;return r&&i}function C(e){let n="";for(let r=0;r<e.length;r++)e[r]=="("?n+=" ( ":e[r]==")"?n+=" ) ":n+=e[r];return n}function u(e){return"kind"in e&&(e.kind==="Lexing error"||e.kind==="Parsing error"||e.kind==="Semantic error"||e.kind==="Evaluation error")}function m(e,n){return`${e.kind} at '${n[e.token_id].value}': ${e.message}.`}function f(e,n,r,i){return{kind:e,token_id:i,message:`expected ${r} arguments, received ${n}`}}function h(e){return e.kind=="TokenBoolean"}function L(e){return e.kind=="TokenNumber"}function A(e){return e.kind=="TokenIdentifier"}function F(e){return e.kind=="TokenOpenParen"}function a(e){return e.kind==="TokenCloseParen"}function x(e){if(!b(e))return{kind:"Lexing error",message:"invalid parentheses"};let r=C(e).split(" ");r=S(r);const i=r.map(M);for(const o of i)if(u(o))return o;return i}function S(e){let n=[];for(let r of e)r!=""&&n.push(r);return n}function M(e){let n=V(e)??R(e)??P(e)??$(e);return n===void 0?{kind:"Lexing error",message:`invalid sequence of characters '${e}'`}:n}function V(e){if(e=="(")return{kind:"TokenOpenParen",value:"("};if(e==")")return{kind:"TokenCloseParen",value:")"}}function R(e){return e==="True"?{kind:"TokenBoolean",value:!0}:e==="False"?{kind:"TokenBoolean",value:!1}:void 0}function P(e){let n=Number(e);if(!isNaN(n))return{kind:"TokenNumber",value:n}}function $(e){if(/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(e))return{kind:"TokenIdentifier",value:e};if(/^[.,:;!?<>\=\@\#\$\+\-\*\/\%\&\|\^\~]+$/.test(e))return{kind:"TokenIdentifier",value:e}}function O(e){return e.kind=="ND_BOOLEAN"}function E(e){return e.kind=="ND_NUMBER"}function k(e){return e.kind=="ND_IDENTIFIER"}function N(e){return e.kind=="ND_CALL"}function I(e){return e.kind=="ND_LET"}function D(e){let n=d(e,0);if(u(n))return n;{let[r,i]=n;return n[1]==e.length?[r,n[1]]:n[1]<e.length?{kind:"Parsing error",token_id:n[1],message:"expected a single expression"}:{kind:"Parsing error",token_id:n[1],message:"not all tokens could be evaluated"}}}function d(e,n=0){if(n<e.length){let r=e[n];return n++,h(r)?[{kind:"ND_BOOLEAN",token_id:n-1,value:r.value},n]:L(r)?[{kind:"ND_NUMBER",token_id:n-1,value:r.value},n]:A(r)?[{kind:"ND_IDENTIFIER",token_id:n-1,value:r.value},n]:F(r)&&n<e.length?B(e[n])?K(e,n):w(e,n):a(r)?{kind:"Parsing error",token_id:n-1,message:"unexpected ')'"}:{kind:"Parsing error",token_id:n-1,message:"unknown token type"}}else return{kind:"Parsing error",token_id:n-1,message:"expected more tokens"}}function w(e,n=0){let r=[];const i=n;let t=d(e,n);if(u(t))return t;const o=t[0];for(;t[1]<e.length;){if(a(e[t[1]]))return t=g(t),[{kind:"ND_CALL",token_id:i,func:o,params:r},t[1]];if(t=d(e,t[1]),u(t))return t;r.push(t[0])}return{kind:"Parsing error",token_id:t[1]-1,message:"expected closing parentheses"}}function B(e){return A(e)&&e.value==="let"}function K(e,n=0){const r=n;if(n++,a(e[n]))return f("Parsing error",0,3,n);let i=d(e,n);if(u(i))return i;const t=i[0];if(!k(t))return{kind:"Parsing error",token_id:i[1]-1,message:"expected an identifier"};if(a(e[i[1]]))return f("Parsing error",1,3,i[1]);if(i=d(e,i[1]),u(i))return i;const o=i[0];if(a(e[i[1]]))return f("Parsing error",2,3,i[1]);if(i=d(e,i[1]),u(i))return i;const l=i[0];return a(e[i[1]])?(i=g(i),[{kind:"ND_LET",token_id:r,name:t,expr:o,body:l},i[1]]):f("Parsing error","too many",3,i[1])}function g(e){let[n,r]=e;return r++,[n,r]}function c(e,n){if(O(e))return{kind:"EVALUATOR_VALUE",value:e.value};if(E(e))return{kind:"EVALUATOR_VALUE",value:e.value};if(k(e))return v(e,n);if(I(e)){let r=U(n);const i=c(e.expr,n);if(u(i))return i;let t=y(e,i,r);return u(t)?t:c(e.body,r)}else if(N(e)){const r=c(e.func,n),i=e.params.map(o=>c(o,n)),t=i.find(u);if(t===void 0){const o=r.value,l=i.map(s=>s.value);return{kind:"EVALUATOR_VALUE",value:o(l)}}else return t}return{kind:"Evaluation error",token_id:e.token_id,message:"invalid expression"}}function p(e,n){const r=n.symbols.get(String(e.value));return r!==void 0?r:n.parent!==void 0?p(e,n.parent):void 0}function q(e,n){if(n.symbols.get(e.name.value))return{kind:"Semantic error",token_id:e.token_id,message:"attempted to redefine an identifier which already exists"};if(k(e.expr)){const r=p(e.expr,n);if(r===void 0)return n.symbols.set(e.name.value,{kind:"SEMANTIC_VALUE"}),{kind:"OK"};if(r.kind==="SEMANTIC_FUNCTION")n.symbols.set(e.name.value,{kind:"SEMANTIC_FUNCTION",arity:r.arity});else if(r.kind==="SEMANTIC_VALUE")n.symbols.set(e.name.value,{kind:"SEMANTIC_VALUE"});else return{kind:"Semantic error",token_id:e.expr.token_id,message:"unknown semantics, neither a function nor a value"}}else n.symbols.set(e.name.value,{kind:"SEMANTIC_VALUE"});return{kind:"OK"}}function H(e){return{parent:e,symbols:new Map}}function _(e,n){if(O(e))return{kind:"OK"};if(E(e))return{kind:"OK"};if(k(e))return p(e,n)!==void 0?{kind:"OK"}:{kind:"Semantic error",token_id:e.token_id,message:`unknown identifier '${e.value}'`};if(I(e)){const r=_(e.expr,n);if(u(r))return r;let i=H(n);const t=q(e,i);if(u(t))return t;const o=_(e.body,i);return u(o)?o:{kind:"OK"}}else if(N(e))if(k(e.func)){const r=p(e.func,n);if(r!==void 0&&r.kind==="SEMANTIC_FUNCTION")if(r.arity===e.params.length){const t=e.params.map(o=>_(o,n)).find(u);return t===void 0?{kind:"OK"}:t}else return f("Semantic error",e.params.length,r.arity,e.token_id);else return{kind:"Semantic error",token_id:e.token_id,message:`unknown identifier '${e.func.value}'`}}else return N(e.func)?_(e.func,n):{kind:"Semantic error",token_id:e.token_id,message:"expected a function identifier"};return{kind:"Semantic error",token_id:e.token_id,message:"invalid expression"}}const z={parent:void 0,symbols:new Map([["+",{kind:"SEMANTIC_FUNCTION",arity:2}],["-",{kind:"SEMANTIC_FUNCTION",arity:2}],["*",{kind:"SEMANTIC_FUNCTION",arity:2}],["/",{kind:"SEMANTIC_FUNCTION",arity:2}],["%",{kind:"SEMANTIC_FUNCTION",arity:2}],["<",{kind:"SEMANTIC_FUNCTION",arity:2}],[">",{kind:"SEMANTIC_FUNCTION",arity:2}],["<=",{kind:"SEMANTIC_FUNCTION",arity:2}],[">=",{kind:"SEMANTIC_FUNCTION",arity:2}],["==",{kind:"SEMANTIC_FUNCTION",arity:2}],["!=",{kind:"SEMANTIC_FUNCTION",arity:2}],["&",{kind:"SEMANTIC_FUNCTION",arity:2}],["|",{kind:"SEMANTIC_FUNCTION",arity:2}],["!",{kind:"SEMANTIC_FUNCTION",arity:1}],["if",{kind:"SEMANTIC_FUNCTION",arity:3}],["help",{kind:"SEMANTIC_FUNCTION",arity:0}],["Help",{kind:"SEMANTIC_FUNCTION",arity:0}]])},Z={parent:void 0,symbols:new Map([["+",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]+e[1]}}],["-",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]-e[1]}}],["*",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]*e[1]}}],["/",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]/e[1]}}],["%",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]%e[1]}}],["<",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]<e[1]}}],[">",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]>e[1]}}],["<=",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]<=e[1]}}],[">=",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]>=e[1]}}],["==",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]==e[1]}}],["!=",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]!=e[1]}}],["&",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]&&e[1]}}],["|",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]||e[1]}}],["!",{kind:"EVALUATOR_FUNCTION",value:function(e){return!e[0]}}],["if",{kind:"EVALUATOR_FUNCTION",value:function(e){return e[0]?e[1]:e[2]}}],["help",{kind:"EVALUATOR_FUNCTION",value:function(e){return T()}}],["Help",{kind:"EVALUATOR_FUNCTION",value:function(e){return T()}}]])},W=[{op:"help",example:"(help)",about:"		prints this dialog"},{op:"Help",example:"(Help)",about:"		prints this dialog"},{op:"+",example:"(+ 5 2)",about:"		addition"},{op:"-",example:"(- 5 2)",about:"		subtraction"},{op:"*",example:"(* 5 2)",about:"		multiplication"},{op:"/",example:"(/ 5 2)",about:"		division"},{op:"%",example:"(% 5 2)",about:"		remainder after division"},{op:"<",example:"(< 5 2)",about:"		less than"},{op:">",example:"(> 5 2)",about:"		greater than"},{op:"<=",example:"(<= 5 2)",about:"	less than or equal to"},{op:">=",example:"(>= 5 2)",about:"	greater than or equal to"},{op:"==",example:"(== 5 2)",about:"	equal to"},{op:"!=",example:"(!= 5 2)",about:"	unequal to"},{op:"&",example:"(& True False)",about:"	logical and"},{op:"|",example:"(| True False)",about:"	logical or"},{op:"!",example:"(! True)",about:"	logical negation"},{op:"if",example:"(if True 4 8)",about:"	if-expression"},{op:"let",example:"(let x 5 (* 2 x))",about:"variables in expressions"}];function T(){const e=`--------------------------------------------------------
`;let n=`
Symbol	Usage			Name
`+e;for(const r of W)n+=`${r.op}	${r.example}	${r.about}
`;return n+=e,n+=`You can write nested expressions, such as:

(+ 1 (* 2 4))
`,n+=e,n}function Y(e){const n=x(e);if(u(n))return n.kind+": "+n.message+". ";{const r=n,i=D(r);if(u(i))return m(i,r);{const[t,o]=i,l=_(t,z);if(u(l))return m(l,r);{const s=c(t,Z);return s.kind==="EVALUATOR_VALUE"?s.value:s.kind==="EVALUATOR_FUNCTION"?"Evaluation error: result is a function. ":u(s)?m(s,r):"Evaluation error: unknown error. "}}}}function j(){const e=document.getElementById("input"),n=document.getElementById("output");n&&new MutationObserver(()=>{n.scrollTop=n.scrollHeight}).observe(n,{childList:!0});const r=e.value,i=Y(r);n.textContent+=`> ${r}
${i}
`}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("output");e&&(e.textContent=`



















Welcome! Try typing:

(+ 1 2)

and press Enter. For more info run:

(help)

`);const n=document.getElementById("input");n==null||n.addEventListener("keydown",r=>{r.key==="Enter"&&(r.preventDefault(),j())})});
