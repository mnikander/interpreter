(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const u of o)if(u.type==="childList")for(const i of u.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&t(i)}).observe(document,{childList:!0,subtree:!0});function r(o){const u={};return o.integrity&&(u.integrity=o.integrity),o.referrerPolicy&&(u.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?u.credentials="include":o.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function t(o){if(o.ep)return;o.ep=!0;const u=r(o);fetch(o.href,u)}})();const s={whitespace:function(e,n,r){return{kind:"Token",subkind:"Whitespace",id:e,offset:n,value:r}},open:function(e,n,r){return{kind:"Token",subkind:"Open",id:e,offset:n,value:"("}},close:function(e,n,r){return{kind:"Token",subkind:"Close",id:e,offset:n,value:")"}},boolean:function(e,n,r){return r==="false"||r==="False"?{kind:"Token",subkind:"Boolean",id:e,offset:n,value:!1}:{kind:"Token",subkind:"Boolean",id:e,offset:n,value:!0}},number:function(e,n,r){return{kind:"Token",subkind:"Number",id:e,offset:n,value:Number(r)}},string:function(e,n,r){return{kind:"Token",subkind:"String",id:e,offset:n,value:r}},identifier:function(e,n,r){return{kind:"Token",subkind:"Identifier",id:e,offset:n,value:r}}},d={whitespace:function(e){return e.kind==="Token"&&e.subkind==="Whitespace"},open:function(e){return e.kind==="Token"&&e.subkind==="Open"},close:function(e){return e.kind==="Token"&&e.subkind==="Close"},boolean:function(e){return e.kind==="Token"&&e.subkind==="Boolean"},number:function(e){return e.kind==="Token"&&e.subkind==="Number"},string:function(e){return e.kind==="Token"&&e.subkind==="String"},identifier:function(e){return e.kind==="Token"&&e.subkind==="Identifier"}};function a(e,n,r){return{kind:"Error",subkind:e,token_id:r,message:n}}function m(e,n){return`${e.subkind} error: ${e.message} '${n[e.token_id].value}'`}function l(e){return e.ok===!0}function p(e){return e.ok===!1}const c={whitespace:{description:"a whitespace character",regex:/^\s/},open:{description:"(",regex:/\(/},close:{description:")",regex:/\)/},bool:{description:"a boolean",regex:/^(true|false)/},int:{description:"an integer",regex:/^[-+]?[0-9]+/},float:{description:"a float",regex:/^[-+]?((\d+\.\d*)|(\d*\.\d+))/},string:{description:"a string",regex:/^"(\\.|[^"\\])*"|'(\\.|[^'\\])*'/},id_alphanum:{description:"an alphanumeric identifier",regex:/^[_a-zA-Z][_a-zA-Z0-9]*/},id_special:{description:"an operation identifier",regex:/^[.,:;!?<>\=\@\#\$\+\-\*\/\%\&\|\^\~]+/}};function B(e){let n={ok:!0,value:{kind:"State",index:0,line:e,tokens:[]}};for(;l(n);)if(n.value.line.length>0)n=I(n.value);else return{ok:!0,value:n.value.tokens};return n}function I(e){let n={ok:!0,value:e};return n=f(c.whitespace,s.whitespace,e),l(n)||(n=f(c.open,s.open,e),l(n))||(n=f(c.close,s.close,e),l(n))||(n=f(c.bool,s.boolean,e),l(n))||(n=f(c.float,s.number,e),l(n))||(n=f(c.int,s.number,e),l(n))||(n=f(c.string,s.string,e),l(n))||(n=f(c.id_alphanum,s.identifier,e),l(n))||(n=f(c.id_special,s.identifier,e),l(n))?n:{ok:!1,error:{kind:"Error",subkind:"Lexing",token_id:e.tokens.length,message:"invalid token, expected an atom"}}}function f(e,n,r){const t=e.regex.exec(r.line);if(t&&t.index===0){const o=t[0];return r.index+=o.length,r.line=r.line.slice(o.length),n!==void 0&&r.tokens.push(n(r.tokens.length,r.index,o)),{ok:!0,value:r}}else return{ok:!1,error:{kind:"Error",subkind:"Lexing",token_id:r.tokens.length,message:`invalid token, expected ${e.description}`}}}function y(e){return e.kind==="Node"}function S(e){return y(e)&&e.data.length===4&&b(e.data[0])&&e.data[0].value==="let"&&b(e.data[1])}function g(e){return e.kind==="Leaf"}function L(e){return g(e)&&e.subkind==="Boolean"}function $(e){return g(e)&&e.subkind==="Number"}function N(e){return g(e)&&e.subkind==="String"}function b(e){return g(e)&&e.subkind==="Identifier"}function A(e,n,r){return{kind:"Leaf",subkind:r.subkind,token_id:r.id,node_id:n,value:r.value}}function q(e){return C(0,0,e).result}function C(e,n,r){let t=_(e,n,r);return e=t.index,n=t.node_counter,e=k(e,r),e!==r.length?{index:e,node_counter:n,result:{ok:!1,error:a("Parsing","expected a single expression at",e)}}:{index:e,node_counter:n,result:t.result}}function _(e,n,r){e=k(e,r);const t=H(e,n,r);if(l(t.result))return t;const o=M(e,n,r);return l(o.result)?o:{index:e,node_counter:n,result:{ok:!1,error:a("Parsing","an expression at",e)}}}function M(e,n,r){if(e==r.length||!d.open(r[e]))return{index:e,node_counter:n,result:{ok:!1,error:a("Parsing","a function call, expected '('",e)}};{let t={kind:"Node",token_id:e,node_id:n,data:[]};e++,n++,e=k(e,r);const o=_(e,n,r);if(p(o.result))return o;for(e=o.index,n=o.node_counter,t.data.push(o.result.value);e<r.length&&d.whitespace(r[e]);){e=k(e,r);const u=_(e,n,r);if(p(u.result))break;e=u.index,n=u.node_counter,t.data.push(u.result.value)}return e=k(e,r),e==r.length||!d.close(r[e])?{index:e,node_counter:n,result:{ok:!1,error:a("Parsing","a function call, expected ')'",e)}}:(e++,{index:e,node_counter:n,result:{ok:!0,value:t}})}}function H(e,n,r){const t=r[e];if(e<r.length&&(d.boolean(t)||d.number(t)||d.string(t)||d.identifier(t))){e++;let o=A(e,n,t);return n++,{index:e,node_counter:n,result:{ok:!0,value:o}}}return{index:e,node_counter:n,result:{ok:!1,error:a("Parsing","an atom, expected a boolean, number, string, or identifier",e)}}}function k(e,n){for(;e<n.length&&d.whitespace(n[e]);)e++;return e}function v(e,n){if(L(e)||$(e)||N(e))return{ok:!0,value:e.value};if(b(e)){const r=O(e.value,n);return r!==void 0?{ok:!0,value:r}:{ok:!1,error:a("Evaluation","identifier",e.token_id)}}else if(S(e)){const r=e.data[1],t=v(e.data[2],n);if(!t.ok)return t;const o=e.data[3];let u={parent:n,symbols:new Map};return u.symbols.set(r.value,t.value),v(o,u)}else if(y(e)){let r=e.data.map(i=>v(i,n));for(let i of r)if(p(i))return i;const t=r.map(i=>i.value),o=t[0],u=t.slice(1);return{ok:!0,value:o(u)}}else return{ok:!1,error:a("Evaluation","unknown AST node",e.token_id)}}const T={parent:void 0,symbols:new Map([["+",function(e){return e[0]+e[1]}],["-",function(e){return e[0]-e[1]}],["*",function(e){return e[0]*e[1]}],["/",function(e){return e[0]/e[1]}],["%",function(e){return e[0]%e[1]}],["<",function(e){return e[0]<e[1]}],[">",function(e){return e[0]>e[1]}],["<=",function(e){return e[0]<=e[1]}],[">=",function(e){return e[0]>=e[1]}],["==",function(e){return e[0]==e[1]}],["!=",function(e){return e[0]!=e[1]}],["&",function(e){return e[0]&&e[1]}],["|",function(e){return e[0]||e[1]}],["!",function(e){return!e[0]}],["if",function(e){return e[0]?e[1]:e[2]}],["help",function(e){return E()}],["Help",function(e){return E()}]])};function O(e,n){const r=n.symbols.get(String(e));return r!==void 0?r:n.parent!==void 0?O(e,n.parent):void 0}const W=[{op:"help",example:"(help)		",about:"prints this dialog"},{op:"Help",example:"(Help)		",about:"prints this dialog"},{op:"+",example:"(+ 5 2)		",about:"addition"},{op:"-",example:"(- 5 2)		",about:"subtraction"},{op:"*",example:"(* 5 2)		",about:"multiplication"},{op:"/",example:"(/ 5 2)		",about:"division"},{op:"%",example:"(% 5 2)		",about:"remainder after division"},{op:"<",example:"(< 5 2)		",about:"less than"},{op:">",example:"(> 5 2)		",about:"greater than"},{op:"<=",example:"(<= 5 2)	",about:"less than or equal to"},{op:">=",example:"(>= 5 2)	",about:"greater than or equal to"},{op:"==",example:"(== 5 2)	",about:"equal to"},{op:"!=",example:"(!= 5 2)	",about:"unequal to"},{op:"&",example:"(& True False)	",about:"logical and"},{op:"|",example:"(| True False)	",about:"logical or"},{op:"!",example:"(! True)	",about:"logical negation"},{op:"if",example:"(if True 4 8)	",about:"if-expression"},{op:"let",example:"(let x 5 (* 2 x))",about:"variables in expressions"}];function E(){const e=`--------------------------------------------------------
`;let n=`
Symbol	Usage			Name
`+e;for(const r of W)n+=`${r.op}	${r.example}	${r.about}
`;return n+=e,n+=`You can write nested expressions, such as:

(+ 1 (* 2 4))
`,n+=e,n}function h(e,n){if(L(e)||$(e)||N(e))return{ok:!0,value:void 0};if(b(e))return P(e.value,n)?{ok:!0,value:void 0}:{ok:!1,error:a("Semantic","unknown identifier",e.token_id)};if(S(e)){const r=e.data[1],t=e.data[2],o=e.data[3];if(!b(r))return{ok:!1,error:a("Semantic","not a valid identifier",r.token_id)};const i=h(t,n);if(!i.ok)return i;let w={parent:n,symbols:new Set};w.symbols.add(r.value);const x=h(o,w);return x.ok?{ok:!0,value:void 0}:x}else if(y(e)){for(let r of e.data){const t=h(r,n);if(!t.ok)return{ok:!1,error:t.error}}return{ok:!0,value:void 0}}else return{ok:!1,error:a("Semantic","unknown kind of AST entry",e.token_id)}}function P(e,n){return n.symbols.has(e)?!0:n.parent!==void 0?P(e,n.parent):!1}function z(e){const n=B(e);if(p(n))return m(n.error,[]);const r=n.value,t=q(r);if(p(t))return m(t.error,r);const o=h(t.value,D(T));if(p(o))return m(o.error,r);const u=t.value,i=v(u,T);return p(i)?m(i.error,r):i.value}function D(e){return{parent:void 0,symbols:new Set(Array.from(e.symbols.keys()))}}function Z(){const e=document.getElementById("input"),n=document.getElementById("output");n&&new MutationObserver(()=>{n.scrollTop=n.scrollHeight}).observe(n,{childList:!0});const r=e.value,t=z(r);n.textContent+=`> ${r}
${t}
`}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("output");e&&(e.textContent=`



















Welcome! Try typing:

(+ 1 2)

and press Enter. For more info run:

(help)

`);const n=document.getElementById("input");n==null||n.focus(),n==null||n.setSelectionRange(n.value.length,n.value.length),n==null||n.addEventListener("keydown",r=>{r.key==="Enter"&&(r.preventDefault(),Z())})});
